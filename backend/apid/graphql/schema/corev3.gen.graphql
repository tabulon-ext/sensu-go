# automatically generated file, do not edit!

"""EntityConfig represents entity configuration."""
type CoreV3EntityConfig {
  
  """
  Metadata contains the name, namespace, labels and annotations of the
  entity.
  """
  metadata: ObjectMeta
  
  """
  EntityClass represents the class of the entity. It can be "agent",
  "proxy", or "backend".
  """
  entity_class: String!
  
  """
  User is the username the entity is connecting as, if the entity is an
  agent entity.
  """
  user: String!
  
  """
  Subscriptions are a weak relationship between entities and checks. The
  scheduler uses subscriptions to make entities to checks when scheduling.
  """
  subscriptions: [String!]!
  
  """
  Deregister, if true, will result in the entity being deleted when the
  entity is an agent, and the agent disconnects its session.
  """
  deregister: Boolean!
  
  """Deregistration contains configuration for Sensu entity de-registration."""
  deregistration: CoreV2Deregistration!
  
  """
  KeepaliveHandlers contains a list of handlers to use for the entity's
  keepalive events.
  """
  keepalive_handlers: [String!]!
  
  """
  Redact contains the fields to redact on the entity, if the entity is an]
  agent entity.
  """
  redact: [String!]!
}

"""
EntityState represents entity state. Unlike configuration, state is
typically only maintained for agent entities, although it can be maintained
for proxy entities in certain circumstances.
"""
type CoreV3EntityState {
  
  """
  Metadata contains the name, namespace, labels and annotations of the
  entity.
  """
  metadata: ObjectMeta
  
  """
  System contains information about the system that the Agent process
  is running on, used for additional Entity context.
  """
  system: CoreV2System!
  
  """
  LastSeen is a unix timestamp that represents when the entity was last
  observed by the keepalive system.
  """
  last_seen: Int!
  
  """SensuAgentVersion is the sensu-agent version."""
  sensu_agent_version: String!
}
